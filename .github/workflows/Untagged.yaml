name: Untagged build

on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*.*.*'
    paths-ignore:
      - '.github/workflows/Tagged.yaml'
#  schedule:
#  - cron: '0 0 * * *'
  workflow_dispatch:

env:
  Configuration: Release
  DSOALRepo: ${{github.repository}}
  DSOALBranch: ${{github.ref_name}}
  OpenALSoftRepo: kcat/openal-soft
  OpenALSoftBranch: master
  GH_TOKEN: ${{github.token}}

jobs:

  setup:
    runs-on: ubuntu-latest
    steps:
      - id: matrix
        run: |
          git clone --branch build-all https://github.com/BinauralAudio/dsoal.git .
          echo "DSOALCommitHash=[\"$(git rev-list HEAD --max-count=2 | sed ':a;N;$!ba;s/\n/\", \"/g')\"]" >> $GITHUB_OUTPUT
      - run: |
          echo "${{ steps.matrix.outputs.DSOALCommitHash }}"
    outputs:
      matrix: ${{ steps.matrix.outputs.DSOALCommitHash }}

  Build:
    needs: [ setup ]
    name: ${{env.DSOALCommitCount}}
    runs-on: windows-2019
    strategy:
      max-parallel: 1
      matrix:
        DSOALCommitHash: ${{fromJSON(needs.setup.outputs.matrix)}}
    steps:
    
    - name: Clone DSOAL
      run: |
        git clone --branch ${{env.DSOALBranch}} https://github.com/${{env.DSOALRepo}}.git .
        git reset --hard ${{matrix.DSOALCommitHash}}
        echo "DSOALCommitHashShort=$(git rev-parse --short=8 HEAD)" >> $env:GITHUB_ENV
        echo "DSOALCommitDateTimeZone=$(git show -s --date=iso-local --format=%cd)" >> $env:GITHUB_ENV
        echo "DSOALCommitDate=$(git show -s --date=iso-local --date=format:'%Y-%m-%d' --format=%cd)" >> $env:GITHUB_ENV
        echo "DSOALCommitCount=$(git rev-list --count HEAD)" >> $env:GITHUB_ENV
        
    - name: Clone OpenAL Soft
      run: |
        git clone --branch ${{env.OpenALSoftBranch}} https://github.com/${{env.OpenALSoftRepo}}.git
        cd "openal-soft"
        git reset --hard $(git rev-list --before=${{env.DSOALCommitDate}} HEAD --max-count=1)
        echo "OpenALSoftCommitHash=$(git rev-parse HEAD)" >> $env:GITHUB_ENV
        echo "OpenALSoftCommitHashShort=$(git rev-parse --short=8 HEAD)" >> $env:GITHUB_ENV
        echo "OpenALSoftCommitDateTimeZone=$(git show -s --date=iso-local --format=%cd)" >> $env:GITHUB_ENV
        echo "OpenALSoftCommitDate=$(git show -s --date=iso-local --date=format:'%Y-%m-%d' --format=%cd)" >> $env:GITHUB_ENV
        echo "OpenALSoftCommitCount=$(git rev-list --count HEAD)" >> $env:GITHUB_ENV

    - name: Build OpenAL Soft
      run: |
        cmake -B "${{github.workspace}}/openal-soft/build/Win32" -DCMAKE_Configuration=${{env.Configuration}} -A Win32 -DALSOFT_BUILD_ROUTER=ON -DALSOFT_REQUIRE_WINMM=ON -DALSOFT_REQUIRE_DSOUND=ON -DALSOFT_REQUIRE_WASAPI=ON "${{github.workspace}}/openal-soft"
        cmake --build "${{github.workspace}}/openal-soft/build/Win32" --config ${{env.Configuration}}
        cmake -B "${{github.workspace}}/openal-soft/build/Win64" -DCMAKE_Configuration=${{env.Configuration}} -A x64 -DALSOFT_BUILD_ROUTER=ON -DALSOFT_REQUIRE_WINMM=ON -DALSOFT_REQUIRE_DSOUND=ON -DALSOFT_REQUIRE_WASAPI=ON "${{github.workspace}}/openal-soft"
        cmake --build "${{github.workspace}}/openal-soft/build/Win64" --config ${{env.Configuration}}

    - name: Build DSOAL
      run: |
        cmake -B "${{github.workspace}}/build/Win32" -A Win32 -DOPENAL_INCLUDE_DIR=openal-soft/include/AL -DOPENAL_LIBRARY=openal-soft/build/Release/OpenAL32.lib
        cmake --build "${{github.workspace}}/build/Win32" --config ${{env.Configuration}}
        cmake -B "${{github.workspace}}/build/Win64" -A x64 -DOPENAL_INCLUDE_DIR=openal-soft/include/AL -DOPENAL_LIBRARY=openal-soft/build/Release/OpenAL32.lib
        cmake --build "${{github.workspace}}/build/Win64" --config ${{env.Configuration}}

    - name: Collect binaries
      run: |
        mkdir -p "Release/Win32"
        move "${{github.workspace}}/build/Win32/${{env.Configuration}}/dsound.dll"                             "Release/Win32/dsound.dll"
        move "${{github.workspace}}/openal-soft/build/Win32/${{env.Configuration}}/soft_oal.dll"               "Release/Win32/dsoal-aldrv.dll"
        copy "${{github.workspace}}/openal-soft/alsoftrc.sample"                                               "Release/Win32/alsoft.ini"
        mkdir -p "Release/Win64"
        move "${{github.workspace}}/build/Win64/${{env.Configuration}}/dsound.dll"                             "Release/Win64/dsound.dll"
        move "${{github.workspace}}/openal-soft/build/Win64/${{env.Configuration}}/soft_oal.dll"               "Release/Win64/dsoal-aldrv.dll"
        copy "${{github.workspace}}/openal-soft/alsoftrc.sample"                                               "Release/Win64/alsoft.ini"
        mkdir -p "Release/Documentation"
        copy "${{github.workspace}}/README.md"                                                                 "Release/Documentation/DSOAL-ReadMe.txt"
        copy "${{github.workspace}}/LICENSE"                                                                   "Release/Documentation/DSOAL-License.txt"
        echo "${{env.DSOALRepo}}" >>                                                                           "Release/Documentation/DSOAL-Version.txt"
        echo "r${{env.DSOALCommitCount}}@${{env.DSOALCommitHashShort}} ${{env.DSOALBranch}}" >>                "Release/Documentation/DSOAL-Version.txt"
        echo "${{matrix.DSOALCommitHash}}" >>                                                                  "Release/Documentation/OpenALSoft-Version.txt"
        echo "${{env.DSOALCommitDateTimeZone}}" >>                                                                     "Release/Documentation/DSOAL-Version.txt"
        copy "${{github.workspace}}/openal-soft/README.md"                                                     "Release/Documentation/OpenALSoft-ReadMe.txt"
        copy "${{github.workspace}}/openal-soft/COPYING"                                                       "Release/Documentation/OpenALSoft-License.txt"
        copy "${{github.workspace}}/openal-soft/BSD-3Clause"                                                   "Release/Documentation/OpenALSoft-BSD-3Clause.txt"
        copy "${{github.workspace}}/openal-soft/ChangeLog"                                                     "Release/Documentation/OpenALSoft-ChangeLog.txt"
        echo "${{env.OpenALSoftRepo}}" >>                                                                      "Release/Documentation/OpenALSoft-Version.txt"
        echo "r${{env.OpenALSoftCommitCount}}@${{env.OpenALSoftCommitHashShort}} ${{env.OpenALSoftBranch}}" >> "Release/Documentation/OpenALSoft-Version.txt"
        echo "${{env.OpenALSoftCommitHash}}" >>                                                                "Release/Documentation/OpenALSoft-Version.txt"
        echo "${{env.OpenALSoftCommitDateTimeZone}}" >>                                                                "Release/Documentation/OpenALSoft-Version.txt"
#        cp -R "Release" "Release+HRTF"
#        mv "Release/Win32/alsoft.ini" "Release/Documentation/alsoft.ini"
#        curl https://raw.githubusercontent.com/${{needs.Build.outputs.OpenALSoftRepo}}/${{needs.Build.outputs.OpenALSoftBranch}}/configs/HRTF/alsoft.ini -o "build/Release/DSOAL+HRTF/${{matrix.config.name}}/alsoft.ini"
        
    - name: Compress artifacts
      run: |
        cd Release
        7z a DSOAL_r${{env.DSOALCommitCount}}.zip      ./Release/*
#        7z a DSOAL+HRTF-${{matrix.config.name}}.zip ./DSOAL+HRTF/*

    - name: Release
      run: |
        gh release create r${{env.DSOALCommitCount}} --title "DSOAL r${{env.DSOALCommitCount}}@${{env.DSOALCommitHashShort}}" --target ${{env.DSOALBranch}} --generate-notes --latest=false --prerelease
        gh release upload r${{env.DSOALCommitCount}} Release/DSOAL_r${{env.DSOALCommitCount}}.zip --clobber
